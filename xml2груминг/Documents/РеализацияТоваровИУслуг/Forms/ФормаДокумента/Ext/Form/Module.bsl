
Процедура ПересчитатьСуммуДокумента()
   	Объект.СуммаДокумента = Объект.Услуги.Итог("Сумма")+ Объект.Товары.Итог("Сумма");
 КонецПроцедуры

&НаКлиенте
Процедура УслугиНоменклатураПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Сумма = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Сумма = 0;		
	КонецЕсли;    
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиВидЦеныПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Сумма = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Сумма = 0;		
	КонецЕсли;
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Цена = 0;		
	КонецЕсли;
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
    ПересчитатьСуммуДокумента();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВидЦеныПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуПродажиНаДату(СтрокаТЧ.Номенклатура,СтрокаТЧ.ВидЦены);
	Иначе
		СтрокаТЧ.Цена = 0;		
	КонецЕсли;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
   	Объект.СуммаДокумента = Объект.Услуги.Итог("Сумма")+ Объект.Товары.Итог("Сумма");
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);  
    ПересчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;  
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);  
    ПересчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(Элемент)
    ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНаДокументОснование = Документы.ЗаписьКлиента.ПроверитьОказаниеУслуг(Параметры.Основание);
	Если Параметры.Свойство("Основание")
	    И ЗначениеЗаполнено(Параметры.Основание)
	    И ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ЗаписьКлиента")  //1
	    И СсылкаНаДокументОснование <> Ложь Тогда
    	СообщениеПользователю = Новый СообщениеПользователю(); //2
        СообщениеПользователю.Текст = СтрШаблон("Для документа уже введён документ реализации %1!",СсылкаНаДокументОснование);
        СообщениеПользователю.Сообщить();
        Отказ = Истина;
        возврат;
	КонецЕсли;
	
	

	Если Объект.Ссылка.Пустая() Тогда
		Объект.ПризнакОплаты = Перечисления.ОплатаДокумента.НеОплачен; 
	Иначе
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Объект.Ссылка);
		Объект.ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли;
		
		
КонецПроцедуры





