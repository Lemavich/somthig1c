
&НаКлиенте
Процедура ЗагрузитьПрайсЛист(Команда)
	Если Не ЗначениеЗаполнено(Поставщик) Тогда
		СообщениеПользователю = Новый СообщениеПользователю();
	    СообщениеПользователю.Текст = "Не заполнено поле Поставщик";
	    СообщениеПользователю.Сообщить();
	ИначеЕсли Не ЗначениеЗаполнено(ДатаПрайсЛиста) Тогда
		СообщениеПользователю = Новый СообщениеПользователю();
	    СообщениеПользователю.Текст = "Не заполнено поле Дата Прайс-листа";
	    СообщениеПользователю.Сообщить();
	Иначе
		СкопироватьФайлНаСервер("ПостроительЗапроса");	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСервер(СпособЗагрузки)

ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСерверЗавершение", ЭтотОбъект, СпособЗагрузки);
НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);

КонецПроцедуры


&НаКлиенте
Процедура СкопироватьФайлНаСерверЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт

Если ОписаниеПомещенногоФайла <> Неопределено Тогда

    АдресФайлаВХранилище = ОписаниеПомещенногоФайла.Адрес; //1

    ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, Поставщик, ДополнительныеПараметры); //2

КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, Поставщик, ДополнительныеПараметры)

	ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);

	ТаблицаПрайсЛиста  = ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок); //1

	Если ТаблицаПрайсЛиста.Количество() Тогда
	    ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, Поставщик);
	Иначе
	    СообщениеПользователю = Новый СообщениеПользователю();
	    СообщениеПользователю.Текст = "Выбранный файл не содержит строк с ценами!";
	    СообщениеПользователю.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок)

ОбластиТабличногоДокумента = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы); //1

Построитель = Новый ПостроительЗапроса; //2
Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента); //3
Построитель.Выполнить();

ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить(); //4

возврат ТаблицаПрайсЛиста;

КонецФункции

&НаСервереБезКонтекста                            
Функция ПрочитатьФайл(АдресФайлаВХранилище)
    
    ТабДок = Новый ТабличныйДокумент;
    
    ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx"); //4
    
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище); //5
    ДвоичныеДанные.Записать(ИмяВременногоФайла); //6
    
    Попытка
        ТабДок.Прочитать(ИмяВременногоФайла); //7
    Исключение  
        вызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
    КонецПопытки; 
    
    возврат ТабДок;
            
КонецФункции 

&НаСервереБезКонтекста
Процедура ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, Поставщик)

Запрос = Новый Запрос; //1
Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);

Запрос.Текст=
"ВЫБРАТЬ
|    ТаблицаПрайсЛиста.Артикул КАК Артикул,
|    ТаблицаПрайсЛиста.Цена КАК Цена
|ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
|ИЗ
|    &ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|    Ном.Ссылка КАК Номенклатура,
|    ВТ_ТаблицаПрайсЛиста.Цена КАК Цена
|ИЗ
|    ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
|        ПО ВТ_ТаблицаПрайсЛиста.Артикул = Ном.Артикул";

Рез = Запрос.Выполнить();
Если Рез.Пустой() Тогда
    возврат;
КонецЕсли;

Выборка = Рез.Выбрать();

ДокументУстановкиЦен = Документы.УстановкаЦенПоставщика.СоздатьДокумент(); //2
ДокументУстановкиЦен.Контрагент = Поставщик;
ДокументУстановкиЦен.Дата = ДатаПрайсЛиста;

Пока Выборка.Следующий() Цикл
    НоваяСтрокаПрайса = ДокументУстановкиЦен.Товары.Добавить();
    ЗаполнитьЗначенияСвойств(НоваяСтрокаПрайса, Выборка);
КонецЦикла;

Попытка

    ДокументУстановкиЦен.Записать(РежимЗаписиДокумента.Проведение); //3

    СообщениеПользователю = Новый СообщениеПользователю();
    СообщениеПользователю.Текст = СтрШаблон("Создан и проведен документ установки цен! %1",ДокументУстановкиЦен.Ссылка);
    СообщениеПользователю.Сообщить();

Исключение
    ДокументУстановкиЦен.Записать(); //4

    СообщениеПользователю = Новый СообщениеПользователю();
    СообщениеПользователю.Текст = "Произошла ошибка при проведении документа установки цен!";
    СообщениеПользователю.Сообщить();

КонецПопытки;

Конецпроцедуры